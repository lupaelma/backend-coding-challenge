{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","js/apps/codingtest/codingtest-main.js","js/apps/codingtest/expenses/expenses-controller.js","js/apps/codingtest/expenses/main.js","js/apps/codingtest/partials.js"],"names":[],"mappings":"AAAA;ACAA;;AAEA;;;;;;AAMA;;AACA,QAAQ,eAAR;AACA,QAAQ,oBAAR;;AAEA;AACA,IAAI,MAAM,QAAQ,MAAR,CAAe,aAAf,EAA8B,CACvC,WADuC,EAEvC,qBAFuC,EAGvC,sBAHuC,CAA9B,CAAV;;AAMA,IAAI,GAAJ,CAAQ,CAAC,YAAD,EAAe,UAAS,UAAT,EAAqB;AAC3C;AACA,KAAI,kBAAkB,EAAtB;AACA,YAAW,MAAX,GAAoB,QAAQ,MAAR,CAAe,EAAE,SAAS,QAAQ,OAAR,CAAgB,IAA3B,EAAf,EAAkD,eAAlD,CAApB;;AAEA;AACA,YAAW,SAAX,GAAuB,EAAvB;AACA,YAAW,WAAX,GAAyB,EAAzB;;AAEA;AACA,YAAW,eAAX,GAA6B,EAA7B;;AAEA;AACA;AACA,YAAW,WAAX,GAAyB,WAAW,WAAX,IAA0B,EAAnD;;AAEA;AACA,YAAW,WAAX,GAAyB,WAAW,WAAX,IAA0B,EAAnD;AACA,YAAW,cAAX,GAA4B,EAA5B;AACA,YAAW,gBAAX,GAA8B,UAAS,cAAT,EAAyB,aAAzB,EAAwC;AACrE,MAAI,WAAW,WAAX,CAAuB,cAAvB,CAAJ,EAA4C;AAC3C,cAAW,cAAX,GAA4B,QAAQ,IAAR,CAAa,WAAW,WAAX,CAAuB,cAAvB,CAAb,CAA5B;;AAEA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,cAAX,CAA0B,MAA9C,EAAsD,GAAtD,EAA2D;AAC1D,QAAI,KAAK,aAAT,EACC,WAAW,cAAX,CAA0B,CAA1B,EAA6B,MAA7B,GAAsC,IAAtC,CADD,KAGC,WAAW,cAAX,CAA0B,CAA1B,EAA6B,MAA7B,GAAsC,KAAtC;AACD;AACD;AACD,EAXD;AAYA,CA/BO,CAAR;;AAiCA;AACA,EAAE,QAAF,EAAY,KAAZ,CAAkB,YAAW;AAC5B,SAAQ,SAAR,CAAkB,MAAlB,EAA0B,CAAC,aAAD,CAA1B;AACA,CAFD;;;ACrDA;;AAEA;;;;;;AAMA,IAAI,MAAM,QAAQ,MAAR,CAAe,qBAAf,EAAsC,EAAtC,CAAV;;AAEA,IAAI,UAAJ,CAAe,cAAf,EAA+B,CAAC,YAAD,EAAe,QAAf,EAAyB,QAAzB,EAAmC,aAAnC,EAAkD,SAAS,YAAT,CAAsB,UAAtB,EAAkC,MAAlC,EAA0C,OAA1C,EAAmD,YAAnD,EAAiE;AACjJ;AACA,aAAW,SAAX,GAAuB,UAAvB;AACA,aAAW,WAAX,GAAyB,UAAzB;;AAEA;AACA,aAAW,gBAAX,CAA4B,UAA5B,EAAwC,CAAxC;;AAEA,MAAI,eAAe,aAAa,IAAb,CAAkB,EAAE,MAAM,QAAQ,OAAhB,EAAlB,EAA6C,EAA7C,CAAgD,SAAhD,CAAnB;;AAEA,SAAO,WAAP,GAAqB;AACpB,iBAAa,IADO;AAEpB,gBAAY,IAFQ;AAGpB,gBAAY;AAHQ,GAArB;;AAMC,MAAI,gBAAgB,SAAhB,aAAgB,CAAS,OAAT,EAAkB;AACpC;AACA,QAAI,SAAS,IAAb;AACA,QAAI,MAAM,OAAN,CAAc,OAAd,CAAJ,EAA4B;AAC1B,eAAS,IAAI,IAAJ,CAAS,QAAQ,CAAR,CAAT,EAAqB,QAAQ,CAAR,IAAW,CAAhC,EAAmC,QAAQ,CAAR,CAAnC,EAA+C,QAAQ,CAAR,CAA/C,EAA2D,QAAQ,CAAR,CAA3D,CAAT;AACD;AACD,WAAO,MAAP;AACD,GAPD;;AASA,MAAI,qBAAqB,SAArB,kBAAqB,CAAS,SAAT,EAAoB;AAC3C;AACA;AACA,QAAI,YAAY,UAAU,KAAV,CAAgB,GAAhB,CAAhB;AACA,QAAI,OAAO,UAAU,CAAV,CAAX;AACA,QAAI,QAAQ,MAAM,UAAU,CAAV,CAAlB;AACA,QAAI,MAAM,MAAM,UAAU,CAAV,CAAhB;AACA,YAAQ,MAAM,KAAN,CAAY,CAAC,CAAb,CAAR;AACA,UAAM,IAAI,KAAJ,CAAU,CAAC,CAAX,CAAN;AACA,QAAI,SAAY,IAAZ,SAAoB,KAApB,SAA6B,GAA7B,WAAJ;AACA,WAAO,MAAP;AACD,GAXD;;AAaD,MAAI,eAAe,SAAf,YAAe,GAAW;AAC7B;AACA,iBAAa,GAAb,GAAmB,IAAnB,CAAwB,UAAS,QAAT,EAAmB;AAC1C,eAAS,OAAT,CAAiB,UAAS,OAAT,EAAkB;AAC9B;AACA,gBAAQ,IAAR,GAAe,cAAc,QAAQ,OAAtB,CAAf;AACA,gBAAQ,MAAR,GAAiB,QAAQ,KAAzB;AACD,OAJJ;AAKG,aAAO,QAAP,GAAkB,QAAlB;AACH,KAPD;AAQA,GAVD;;AAYA,SAAO,WAAP,GAAqB,YAAW;AAC/B,QAAI,OAAO,YAAP,CAAoB,MAAxB,EAAgC;AAC5B;AACA,UAAI,UAAU,EAAd;AACA,cAAQ,OAAR,GAAkB,mBAAmB,OAAO,UAAP,CAAkB,IAArC,CAAlB;AACA,cAAQ,KAAR,GAAgB,WAAW,OAAO,UAAP,CAAkB,MAA7B,CAAhB;AACA,cAAQ,MAAR,GAAiB,OAAO,UAAP,CAAkB,MAAnC;AACH;AACA,mBAAa,IAAb,CAAkB,OAAlB,EAA2B,IAA3B,CAAgC,YAAW;AACtC;AACA,eAAO,YAAP;AACJ;AACA;AACA,OALD,EAKG,KALH,CAKS,UAAS,EAAT,EAAa;AACjB,cAAM,KAAK,SAAL,CAAe,EAAf,CAAN;AACD,OAPJ;AAQA;AACD,GAjBD;;AAmBA,SAAO,YAAP,GAAsB,YAAW;AAChC,WAAO,UAAP,GAAoB,EAApB;AACA,GAFD;;AAIA;AACA;AACA,SAAO,YAAP;AACA,CA5E8B,CAA/B;;;ACVA;;AAEA;;;;;;AAMA,QAAQ,0BAAR;;AAEA,IAAI,MAAM,QAAQ,MAAR,CAAe,sBAAf,EAAuC,CAChD,qBADgD,CAAvC,CAAV;;AAIA,IAAI,MAAJ,CAAW,CAAC,gBAAD,EAAmB,UAAS,cAAT,EAAyB;AACtD;;AAEA,gBAAe,IAAf,CAAoB,WAApB,EAAiC,EAAE,aAAa,kCAAf,EAAjC;;AAEA,gBAAe,SAAf,CAAyB,EAAC,YAAY,WAAb,EAAzB;AACA,CANU,CAAX;;AAQA,IAAI,GAAJ,CAAQ,CAAC,YAAD,EAAe,UAAS,UAAT,EAAqB;AAC3C;AACA,YAAW,WAAX,GAAyB,WAAW,WAAX,IAA0B,EAAnD;AACA,YAAW,WAAX,CAAuB,IAAvB,CAA4B,EAAE,OAAO,UAAT,EAAqB,OAAO,sBAA5B,EAAoD,KAAK,UAAzD,EAA5B;;AAEA;AACA,YAAW,WAAX,GAAyB,WAAW,WAAX,IAA0B,EAAnD;AACA,YAAW,WAAX,CAAuB,QAAvB,GAAkC,CACjC,EAAE,OAAO,UAAT,EAAqB,KAAK,UAA1B,EADiC,CAAlC;AAGA,CAVO,CAAR;;;;;ACtBA,QAAQ,MAAR,CAAe,qBAAf,EAAqC,EAArC,EAAyC,GAAzC,CAA6C,CAAC,gBAAD,EAAkB,UAAS,CAAT,EAAW;AAAC,IAAE,GAAF,CAAM,kCAAN,EAAyC,gxCAAzC;AAA2zC,CAAz1C,CAA7C","file":"../backend-coding-challenge/codingtest.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\r\n\r\n/******************************************************************************************\r\n\r\nAlchemytec Coding Test for Expenses Back End\r\n\r\n******************************************************************************************/\r\n\r\n// App files\r\nrequire(\"./partials.js\");\r\nrequire(\"./expenses/main.js\");\r\n\r\n// Declare app level module which depends on filters, and services\r\nvar app = angular.module(\"alcExpenses\", [\r\n\t\"alcShared\",\r\n\t\"codingtest.partials\",\r\n\t\"expenses.controllers\"\r\n]);\r\n\r\napp.run([\"$rootScope\", function($rootScope) {\r\n\t// Basic config options\r\n\tvar gulpBuildConfig = {};\r\n\t$rootScope.config = angular.extend({ angular: angular.version.full }, gulpBuildConfig);\r\n\r\n\t// Headings used by the menu bars\r\n\t$rootScope.mainTitle = \"\";\r\n\t$rootScope.mainHeading = \"\";\r\n\r\n\t// Sections of content are used for bookmark navigation\r\n\t$rootScope.contentSections = [];\r\n\r\n\t// App sections are distinct areas of the website\r\n\t// These will ultimately be retrieved from the server\r\n\t$rootScope.appSections = $rootScope.appSections || [];\r\n\r\n\t// Initialise tab sections\r\n\t$rootScope.tabSections = $rootScope.tabSections || {};\r\n\t$rootScope.currentSection = [];\r\n\t$rootScope.selectTabSection = function(currentSection, selectedIndex) {\r\n\t\tif ($rootScope.tabSections[currentSection]) {\r\n\t\t\t$rootScope.currentSection = angular.copy($rootScope.tabSections[currentSection]);\r\n\r\n\t\t\tfor (var u = 0; u < $rootScope.currentSection.length; u++) {\r\n\t\t\t\tif (u == selectedIndex)\r\n\t\t\t\t\t$rootScope.currentSection[u].active = true;\r\n\t\t\t\telse\r\n\t\t\t\t\t$rootScope.currentSection[u].active = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}]);\r\n\r\n// Bootstrap the app\r\n$(document).ready(function() {\r\n\tangular.bootstrap(\"body\", [\"alcExpenses\"]);\r\n});\r\n","\"use strict\";\r\n\r\n/******************************************************************************************\r\n\r\nExpenses controller\r\n\r\n******************************************************************************************/\r\n\r\nvar app = angular.module(\"expenses.controller\", []);\r\n\r\napp.controller(\"ctrlExpenses\", [\"$rootScope\", \"$scope\", \"config\", \"restalchemy\", function ExpensesCtrl($rootScope, $scope, $config, $restalchemy) {\r\n\t// Update the headings\r\n\t$rootScope.mainTitle = \"Expenses\";\r\n\t$rootScope.mainHeading = \"Expenses\";\r\n\r\n\t// Update the tab sections\r\n\t$rootScope.selectTabSection(\"expenses\", 0);\r\n\r\n\tvar restExpenses = $restalchemy.init({ root: $config.apiroot }).at(\"expense\");\r\n\r\n\t$scope.dateOptions = {\r\n\t\tchangeMonth: true,\r\n\t\tchangeYear: true,\r\n\t\tdateFormat: \"dd/mm/yy\"\r\n\t};\r\n\r\n  var createdToDate = function(created) {\r\n    // created is from Java LocalDateTime [2018,2,4,11,22]\r\n    var result = null;\r\n    if (Array.isArray(created)) {\r\n      result = new Date(created[0], created[1]-1, created[2], created[3], created[4]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  var dateInputToCreated = function(dateInput) {\r\n    // dateInput is of the form dd/mm/yy\r\n    // brute force parsing... but there must be better approach\r\n    var dateParts = dateInput.split(\"/\");\r\n    var year = dateParts[2];\r\n    var month = \"0\" + dateParts[1]; \r\n    var day = \"0\" + dateParts[0]; \r\n    month = month.slice(-2);\r\n    day = day.slice(-2);\r\n    var result = `${year}-${month}-${day}T00:00`;\r\n    return result;\r\n  }\r\n\r\n\tvar loadExpenses = function() {\r\n\t\t// Retrieve a list of expenses via REST\r\n\t\trestExpenses.get().then(function(expenses) {\r\n\t\t\texpenses.forEach(function(element) {\r\n        // map backend fields to the form fields\r\n        element.date = createdToDate(element.created);\r\n        element.amount = element.value;\r\n      });\r\n      $scope.expenses = expenses;\r\n\t\t});\r\n\t}\r\n\r\n\t$scope.saveExpense = function() {\r\n\t\tif ($scope.expensesform.$valid) {\r\n      // map form fields to POST expense api \r\n      var expense = {};\r\n      expense.created = dateInputToCreated($scope.newExpense.date);\r\n      expense.value = parseFloat($scope.newExpense.amount);\r\n      expense.reason = $scope.newExpense.reason;\r\n\t\t\t// Post the expense via REST\r\n\t\t\trestExpenses.post(expense).then(function() {\r\n        // clean form\r\n        $scope.clearExpense();\r\n\t\t\t\t// Reload new expenses list\r\n\t\t\t\tloadExpenses();\r\n\t\t\t}).error(function(ex) {\r\n        alert(JSON.stringify(ex));\r\n      });\r\n\t\t}\r\n\t};\r\n\r\n\t$scope.clearExpense = function() {\r\n\t\t$scope.newExpense = {};\r\n\t};\r\n\r\n\t// Initialise scope variables\r\n\tloadExpenses();\r\n\t$scope.clearExpense();\r\n}]);\r\n","\"use strict\";\r\n\r\n/******************************************************************************************\r\n\r\nTasks main\r\n\r\n******************************************************************************************/\r\n\r\nrequire(\"./expenses-controller.js\");\r\n\r\nvar app = angular.module(\"expenses.controllers\", [\r\n\t\"expenses.controller\"\r\n]);\r\n\r\napp.config([\"$routeProvider\", function($routeProvider) {\r\n\t// Labour analysis routes\r\n\r\n\t$routeProvider.when(\"/expenses\", { templateUrl: \"codingtest/expenses-content.html\" });\r\n\r\n\t$routeProvider.otherwise({redirectTo: \"/expenses\"});\r\n}]);\r\n\r\napp.run([\"$rootScope\", function($rootScope) {\r\n\t// Add app button\r\n\t$rootScope.appSections = $rootScope.appSections || [];\r\n\t$rootScope.appSections.push({ title: \"Expenses\", image: \"img/icon-generic.png\", app: \"expenses\" });\r\n\r\n\t// Configure tab sections\r\n\t$rootScope.tabSections = $rootScope.tabSections || {};\r\n\t$rootScope.tabSections.expenses = [\r\n\t\t{ title: \"Expenses\", app: \"expenses\" }\r\n\t];\r\n}]);\r\n","angular.module(\"codingtest.partials\",[]).run([\"$templateCache\",function(e){e.put(\"codingtest/expenses-content.html\",'<div ng-controller=\"ctrlExpenses\"><h2>Expenses</h2><div bookmarklist id=\"bookmarks\" class=\"section-list\"></div><h3>Add an expense</h3><form name=\"expensesform\"><ul><li><label>Date</label><input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.date\" ui-date=\"dateOptions\" placeholder=\"dd/mm/yyyy\"></li><li><label>Amount</label><input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.amount\" placeholder=\"00.00\"></li><li><label>Reason</label><textarea at-auto-resize ng-required=\"true\" ng-model=\"newExpense.reason\" ng-trim=\"false\" placeholder=\"why oh why?\"></textarea></li><li><label></label><button ng-click=\"saveExpense()\" class=\"solid\">Save Expense</button> <button ng-click=\"clearExpense()\">cancel</button></li></ul></form><h3>Submitted expenses</h3><div class=\"list-table expenses-data\"><div class=\"header-row\"><div class=\"col-4\">Date</div><div class=\"col-4 figures\">Amount (inc. VAT)</div><div class=\"col-2 figures\">VAT</div><div class=\"col-15\">Reason</div></div><div ng-repeat=\"expense in expenses\" class=\"body-row\"><div class=\"col-4\">{{expense.date | date:\\'dd MMM yyyy\\'}}</div><div class=\"col-4 figures\">{{expense.amount | currency:\"&pound;\"}}</div><div class=\"col-2 figures\">{{expense.vat | currency:\"&pound;\"}}</div><div class=\"col-15\">{{expense.reason}}</div></div></div></div>')}]);"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqcy9hcHBzL2NvZGluZ3Rlc3QvY29kaW5ndGVzdC1tYWluLmpzIiwianMvYXBwcy9jb2Rpbmd0ZXN0L2V4cGVuc2VzL2V4cGVuc2VzLWNvbnRyb2xsZXIuanMiLCJqcy9hcHBzL2NvZGluZ3Rlc3QvZXhwZW5zZXMvbWFpbi5qcyIsImpzL2FwcHMvY29kaW5ndGVzdC9wYXJ0aWFscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBOztBQUVBOzs7Ozs7QUFNQTs7QUFDQSxRQUFRLGVBQVI7QUFDQSxRQUFRLG9CQUFSOztBQUVBO0FBQ0EsSUFBSSxNQUFNLFFBQVEsTUFBUixDQUFlLGFBQWYsRUFBOEIsQ0FDdkMsV0FEdUMsRUFFdkMscUJBRnVDLEVBR3ZDLHNCQUh1QyxDQUE5QixDQUFWOztBQU1BLElBQUksR0FBSixDQUFRLENBQUMsWUFBRCxFQUFlLFVBQVMsVUFBVCxFQUFxQjtBQUMzQztBQUNBLEtBQUksa0JBQWtCLEVBQXRCO0FBQ0EsWUFBVyxNQUFYLEdBQW9CLFFBQVEsTUFBUixDQUFlLEVBQUUsU0FBUyxRQUFRLE9BQVIsQ0FBZ0IsSUFBM0IsRUFBZixFQUFrRCxlQUFsRCxDQUFwQjs7QUFFQTtBQUNBLFlBQVcsU0FBWCxHQUF1QixFQUF2QjtBQUNBLFlBQVcsV0FBWCxHQUF5QixFQUF6Qjs7QUFFQTtBQUNBLFlBQVcsZUFBWCxHQUE2QixFQUE3Qjs7QUFFQTtBQUNBO0FBQ0EsWUFBVyxXQUFYLEdBQXlCLFdBQVcsV0FBWCxJQUEwQixFQUFuRDs7QUFFQTtBQUNBLFlBQVcsV0FBWCxHQUF5QixXQUFXLFdBQVgsSUFBMEIsRUFBbkQ7QUFDQSxZQUFXLGNBQVgsR0FBNEIsRUFBNUI7QUFDQSxZQUFXLGdCQUFYLEdBQThCLFVBQVMsY0FBVCxFQUF5QixhQUF6QixFQUF3QztBQUNyRSxNQUFJLFdBQVcsV0FBWCxDQUF1QixjQUF2QixDQUFKLEVBQTRD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QVgsR0FBeUIsV0FBVyxXQUFYLElBQTBCLEVBQW5EO0FBQ0EsWUFBVyxXQUFYLENBQXVCLElBQXZCLENBQTRCLEVBQUUsT0FBTyxVQUFULEVBQXFCLE9BQU8sc0JBQTVCLEVBQW9ELEtBQUssVUFBekQsRUFBNUI7O0FBRUE7QUFDQSxZQUFXLFdBQVgsR0FBeUIsV0FBVyxXQUFYLElBQTBCLEVBQW5EO0FBQ0EsWUFBVyxXQUFYLENBQXVCLFFBQXZCLEdBQWtDLENBQ2pDLEVBQUUsT0FBTyxVQUFULEVBQXFCLEtBQUssVUFBMUIsRUFEaUMsQ0FBbEM7QUFHQSxDQVZPLENBQVI7Ozs7O0FDdEJBLFFBQVEsTUFBUixDQUFlLHFCQUFmLEVBQXFDLEVBQXJDLEVBQXlDLEdBQXpDLENBQTZDLENBQUMsZ0JBQUQsRUFBa0IsVUFBUyxDQUFULEVBQVc7QUFBQyxJQUFFLEdBQUYsQ0FBTSxrQ0FBTixFQUF5QyxneENBQXpDO0FBQTJ6QyxDQUF6MUMsQ0FBN0MiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG5BbGNoZW15dGVjIENvZGluZyBUZXN0IGZvciBFeHBlbnNlcyBCYWNrIEVuZFxyXG5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuLy8gQXBwIGZpbGVzXHJcbnJlcXVpcmUoXCIuL3BhcnRpYWxzLmpzXCIpO1xyXG5yZXF1aXJlKFwiLi9leHBlbnNlcy9tYWluLmpzXCIpO1xyXG5cclxuLy8gRGVjbGFyZSBhcHAgbGV2ZWwgbW9kdWxlIHdoaWNoIGRlcGVuZHMgb24gZmlsdGVycywgYW5kIHNlcnZpY2VzXHJcbnZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZShcImFsY0V4cGVuc2VzXCIsIFtcclxuXHRcImFsY1NoYXJlZFwiLFxyXG5cdFwiY29kaW5ndGVzdC5wYXJ0aWFsc1wiLFxyXG5cdFwiZXhwZW5zZXMuY29udHJvbGxlcnNcIlxyXG5dKTtcclxuXHJcbmFwcC5ydW4oW1wiJHJvb3RTY29wZVwiLCBmdW5jdGlvbigkcm9vdFNjb3BlKSB7XHJcblx0Ly8gQmFzaWMgY29uZmlnIG9wdGlvbnNcclxuXHR2YXIgZ3VscEJ1aWxkQ29uZmlnID0ge307XHJcblx0JHJvb3RTY29wZS5jb25maWcgPSBhbmd1bGFyLmV4dGVuZCh7IGFuZ3VsYXI6IGFuZ3VsYXIudmVyc2lvbi5mdWxsIH0sIGd1bHBCdWlsZENvbmZpZyk7XHJcblxyXG5cdC8vIEhlYWRpbmdzIHVzZWQgYnkgdGhlIG1lbnUgYmFyc1xyXG5cdCRyb290U2NvcGUubWFpblRpdGxlID0gXCJcIjtcclxuXHQkcm9vdFNjb3BlLm1haW5IZWFkaW5nID0gXCJcIjtcclxuXHJcblx0Ly8gU2VjdGlvbnMgb2YgY29udGVudCBhcmUgdXNlZCBmb3IgYm9va21hcmsgbmF2aWdhdGlvblxyXG5cdCRyb290U2NvcGUuY29udGVudFNlY3Rpb25zID0gW107XHJcblxyXG5cdC8vIEFwcCBzZWN0aW9ucyBhcmUgZGlzdGluY3QgYXJlYXMgb2YgdGhlIHdlYnNpdGVcclxuXHQvLyBUaGVzZSB3aWxsIHVsdGltYXRlbHkgYmUgcmV0cmlldmVkIGZyb20gdGhlIHNlcnZlclxyXG5cdCRyb290U2NvcGUuYXBwU2VjdGlvbnMgPSAkcm9vdFNjb3BlLmFwcFNlY3Rpb25zIHx8IFtdO1xyXG5cclxuXHQvLyBJbml0aWFsaXNlIHRhYiBzZWN0aW9uc1xyXG5cdCRyb290U2NvcGUudGFiU2VjdGlvbnMgPSAkcm9vdFNjb3BlLnRhYlNlY3Rpb25zIHx8IHt9O1xyXG5cdCRyb290U2NvcGUuY3VycmVudFNlY3Rpb24gPSBbXTtcclxuXHQkcm9vdFNjb3BlLnNlbGVjdFRhYlNlY3Rpb24gPSBmdW5jdGlvbihjdXJyZW50U2VjdGlvbiwgc2VsZWN0ZWRJbmRleCkge1xyXG5cdFx0aWYgKCRyb290U2NvcGUudGFiU2VjdGlvbnNbY3VycmVudFNlY3Rpb25dKSB7XHJcblx0XHRcdCRyb290U2NvcGUuY3VycmVudFNlY3Rpb24gPSBhbmd1bGFyLmNvcHkoJHJvb3RTY29wZS50YWJTZWN0aW9uc1tjdXJyZW50U2VjdGlvbl0pO1xyXG5cclxuXHRcdFx0Zm9yICh2YXIgdSA9IDA7IHUgPCAkcm9vdFNjb3BlLmN1cnJlbnRTZWN0aW9uLmxlbmd0aDsgdSsrKSB7XHJcblx0XHRcdFx0aWYgKHUgPT0gc2VsZWN0ZWRJbmRleClcclxuXHRcdFx0XHRcdCRyb290U2NvcGUuY3VycmVudFNlY3Rpb25bdV0uYWN0aXZlID0gdHJ1ZTtcclxuXHRcdFx0XHRlbHNlXHJcblx0XHRcdFx0XHQkcm9vdFNjb3BlLmN1cnJlbnRTZWN0aW9uW3VdLmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxufV0pO1xyXG5cclxuLy8gQm9vdHN0cmFwIHRoZSBhcHBcclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcblx0YW5ndWxhci5ib290c3RyYXAoXCJib2R5XCIsIFtcImFsY0V4cGVuc2VzXCJdKTtcclxufSk7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuRXhwZW5zZXMgY29udHJvbGxlclxyXG5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxudmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKFwiZXhwZW5zZXMuY29udHJvbGxlclwiLCBbXSk7XHJcblxyXG5hcHAuY29udHJvbGxlcihcImN0cmxFeHBlbnNlc1wiLCBbXCIkcm9vdFNjb3BlXCIsIFwiJHNjb3BlXCIsIFwiY29uZmlnXCIsIFwicmVzdGFsY2hlbXlcIiwgZnVuY3Rpb24gRXhwZW5zZXNDdHJsKCRyb290U2NvcGUsICRzY29wZSwgJGNvbmZpZywgJHJlc3RhbGNoZW15KSB7XHJcblx0Ly8gVXBkYXRlIHRoZSBoZWFkaW5nc1xyXG5cdCRyb290U2NvcGUubWFpblRpdGxlID0gXCJFeHBlbnNlc1wiO1xyXG5cdCRyb290U2NvcGUubWFpbkhlYWRpbmcgPSBcIkV4cGVuc2VzXCI7XHJcblxyXG5cdC8vIFVwZGF0ZSB0aGUgdGFiIHNlY3Rpb25zXHJcblx0JHJvb3RTY29wZS5zZWxlY3RUYWJTZWN0aW9uKFwiZXhwZW5zZXNcIiwgMCk7XHJcblxyXG5cdHZhciByZXN0RXhwZW5zZXMgPSAkcmVzdGFsY2hlbXkuaW5pdCh7IHJvb3Q6ICRjb25maWcuYXBpcm9vdCB9KS5hdChcImV4cGVuc2VcIik7XHJcblxyXG5cdCRzY29wZS5kYXRlT3B0aW9ucyA9IHtcclxuXHRcdGNoYW5nZU1vbnRoOiB0cnVlLFxyXG5cdFx0Y2hhbmdlWWVhcjogdHJ1ZSxcclxuXHRcdGRhdGVGb3JtYXQ6IFwiZGQvbW0veXlcIlxyXG5cdH07XHJcblxyXG4gIHZhciBjcmVhdGVkVG9EYXRlID0gZnVuY3Rpb24oY3JlYXRlZCkge1xyXG4gICAgLy8gY3JlYXRlZCBpcyBmcm9tIEphdmEgTG9jYWxEYXRlVGltZSBbMjAxOCwyLDQsMTEsMjJdXHJcbiAgICB2YXIgcmVzdWx0ID0gbnVsbDtcclxuICAgIGlmIChBcnJheS5pc0FycmF5KGNyZWF0ZWQpKSB7XHJcbiAgICAgIHJlc3VsdCA9IG5ldyBEYXRlKGNyZWF0ZWRbMF0sIGNyZWF0ZWRbMV0tMSwgY3JlYXRlZFsyXSwgY3JlYXRlZFszXSwgY3JlYXRlZFs0XSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgdmFyIGRhdGVJbnB1dFRvQ3JlYXRlZCA9IGZ1bmN0aW9uKGRhdGVJbnB1dCkge1xyXG4gICAgLy8gZGF0ZUlucHV0IGlzIG9mIHRoZSBmb3JtIGRkL21tL3l5XHJcbiAgICAvLyBicnV0ZSBmb3JjZSBwYXJzaW5nLi4uIGJ1dCB0aGVyZSBtdXN0IGJlIGJldHRlciBhcHByb2FjaFxyXG4gICAgdmFyIGRhdGVQYXJ0cyA9IGRhdGVJbnB1dC5zcGxpdChcIi9cIik7XHJcbiAgICB2YXIgeWVhciA9IGRhdGVQYXJ0c1syXTtcclxuICAgIHZhciBtb250aCA9IFwiMFwiICsgZGF0ZVBhcnRzWzFdOyBcclxuICAgIHZhciBkYXkgPSBcIjBcIiArIGRhdGVQYXJ0c1swXTsgXHJcbiAgICBtb250aCA9IG1vbnRoLnNsaWNlKC0yKTtcclxuICAgIGRheSA9IGRheS5zbGljZSgtMik7XHJcbiAgICB2YXIgcmVzdWx0ID0gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9VDAwOjAwYDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuXHR2YXIgbG9hZEV4cGVuc2VzID0gZnVuY3Rpb24oKSB7XHJcblx0XHQvLyBSZXRyaWV2ZSBhIGxpc3Qgb2YgZXhwZW5zZXMgdmlhIFJFU1RcclxuXHRcdHJlc3RFeHBlbnNlcy5nZXQoKS50aGVuKGZ1bmN0aW9uKGV4cGVuc2VzKSB7XHJcblx0XHRcdGV4cGVuc2VzLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xyXG4gICAgICAgIC8vIG1hcCBiYWNrZW5kIGZpZWxkcyB0byB0aGUgZm9ybSBmaWVsZHNcclxuICAgICAgICBlbGVtZW50LmRhdGUgPSBjcmVhdGVkVG9EYXRlKGVsZW1lbnQuY3JlYXRlZCk7XHJcbiAgICAgICAgZWxlbWVudC5hbW91bnQgPSBlbGVtZW50LnZhbHVlO1xyXG4gICAgICB9KTtcclxuICAgICAgJHNjb3BlLmV4cGVuc2VzID0gZXhwZW5zZXM7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdCRzY29wZS5zYXZlRXhwZW5zZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYgKCRzY29wZS5leHBlbnNlc2Zvcm0uJHZhbGlkKSB7XHJcbiAgICAgIC8vIG1hcCBmb3JtIGZpZWxkcyB0byBQT1NUIGV4cGVuc2UgYXBpIFxyXG4gICAgICB2YXIgZXhwZW5zZSA9IHt9O1xyXG4gICAgICBleHBlbnNlLmNyZWF0ZWQgPSBkYXRlSW5wdXRUb0NyZWF0ZWQoJHNjb3BlLm5ld0V4cGVuc2UuZGF0ZSk7XHJcbiAgICAgIGV4cGVuc2UudmFsdWUgPSBwYXJzZUZsb2F0KCRzY29wZS5uZXdFeHBlbnNlLmFtb3VudCk7XHJcbiAgICAgIGV4cGVuc2UucmVhc29uID0gJHNjb3BlLm5ld0V4cGVuc2UucmVhc29uO1xyXG5cdFx0XHQvLyBQb3N0IHRoZSBleHBlbnNlIHZpYSBSRVNUXHJcblx0XHRcdHJlc3RFeHBlbnNlcy5wb3N0KGV4cGVuc2UpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gY2xlYW4gZm9ybVxyXG4gICAgICAgICRzY29wZS5jbGVhckV4cGVuc2UoKTtcclxuXHRcdFx0XHQvLyBSZWxvYWQgbmV3IGV4cGVuc2VzIGxpc3RcclxuXHRcdFx0XHRsb2FkRXhwZW5zZXMoKTtcclxuXHRcdFx0fSkuZXJyb3IoZnVuY3Rpb24oZXgpIHtcclxuICAgICAgICBhbGVydChKU09OLnN0cmluZ2lmeShleCkpO1xyXG4gICAgICB9KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQkc2NvcGUuY2xlYXJFeHBlbnNlID0gZnVuY3Rpb24oKSB7XHJcblx0XHQkc2NvcGUubmV3RXhwZW5zZSA9IHt9O1xyXG5cdH07XHJcblxyXG5cdC8vIEluaXRpYWxpc2Ugc2NvcGUgdmFyaWFibGVzXHJcblx0bG9hZEV4cGVuc2VzKCk7XHJcblx0JHNjb3BlLmNsZWFyRXhwZW5zZSgpO1xyXG59XSk7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuVGFza3MgbWFpblxyXG5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxucmVxdWlyZShcIi4vZXhwZW5zZXMtY29udHJvbGxlci5qc1wiKTtcclxuXHJcbnZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZShcImV4cGVuc2VzLmNvbnRyb2xsZXJzXCIsIFtcclxuXHRcImV4cGVuc2VzLmNvbnRyb2xsZXJcIlxyXG5dKTtcclxuXHJcbmFwcC5jb25maWcoW1wiJHJvdXRlUHJvdmlkZXJcIiwgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcclxuXHQvLyBMYWJvdXIgYW5hbHlzaXMgcm91dGVzXHJcblxyXG5cdCRyb3V0ZVByb3ZpZGVyLndoZW4oXCIvZXhwZW5zZXNcIiwgeyB0ZW1wbGF0ZVVybDogXCJjb2Rpbmd0ZXN0L2V4cGVuc2VzLWNvbnRlbnQuaHRtbFwiIH0pO1xyXG5cclxuXHQkcm91dGVQcm92aWRlci5vdGhlcndpc2Uoe3JlZGlyZWN0VG86IFwiL2V4cGVuc2VzXCJ9KTtcclxufV0pO1xyXG5cclxuYXBwLnJ1bihbXCIkcm9vdFNjb3BlXCIsIGZ1bmN0aW9uKCRyb290U2NvcGUpIHtcclxuXHQvLyBBZGQgYXBwIGJ1dHRvblxyXG5cdCRyb290U2NvcGUuYXBwU2VjdGlvbnMgPSAkcm9vdFNjb3BlLmFwcFNlY3Rpb25zIHx8IFtdO1xyXG5cdCRyb290U2NvcGUuYXBwU2VjdGlvbnMucHVzaCh7IHRpdGxlOiBcIkV4cGVuc2VzXCIsIGltYWdlOiBcImltZy9pY29uLWdlbmVyaWMucG5nXCIsIGFwcDogXCJleHBlbnNlc1wiIH0pO1xyXG5cclxuXHQvLyBDb25maWd1cmUgdGFiIHNlY3Rpb25zXHJcblx0JHJvb3RTY29wZS50YWJTZWN0aW9ucyA9ICRyb290U2NvcGUudGFiU2VjdGlvbnMgfHwge307XHJcblx0JHJvb3RTY29wZS50YWJTZWN0aW9ucy5leHBlbnNlcyA9IFtcclxuXHRcdHsgdGl0bGU6IFwiRXhwZW5zZXNcIiwgYXBwOiBcImV4cGVuc2VzXCIgfVxyXG5cdF07XHJcbn1dKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoXCJjb2Rpbmd0ZXN0LnBhcnRpYWxzXCIsW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLGZ1bmN0aW9uKGUpe2UucHV0KFwiY29kaW5ndGVzdC9leHBlbnNlcy1jb250ZW50Lmh0bWxcIiwnPGRpdiBuZy1jb250cm9sbGVyPVwiY3RybEV4cGVuc2VzXCI+PGgyPkV4cGVuc2VzPC9oMj48ZGl2IGJvb2ttYXJrbGlzdCBpZD1cImJvb2ttYXJrc1wiIGNsYXNzPVwic2VjdGlvbi1saXN0XCI+PC9kaXY+PGgzPkFkZCBhbiBleHBlbnNlPC9oMz48Zm9ybSBuYW1lPVwiZXhwZW5zZXNmb3JtXCI+PHVsPjxsaT48bGFiZWw+RGF0ZTwvbGFiZWw+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctcmVxdWlyZWQ9XCJ0cnVlXCIgbmctbW9kZWw9XCJuZXdFeHBlbnNlLmRhdGVcIiB1aS1kYXRlPVwiZGF0ZU9wdGlvbnNcIiBwbGFjZWhvbGRlcj1cImRkL21tL3l5eXlcIj48L2xpPjxsaT48bGFiZWw+QW1vdW50PC9sYWJlbD48aW5wdXQgdHlwZT1cInRleHRcIiBuZy1yZXF1aXJlZD1cInRydWVcIiBuZy1tb2RlbD1cIm5ld0V4cGVuc2UuYW1vdW50XCIgcGxhY2Vob2xkZXI9XCIwMC4wMFwiPjwvbGk+PGxpPjxsYWJlbD5SZWFzb248L2xhYmVsPjx0ZXh0YXJlYSBhdC1hdXRvLXJlc2l6ZSBuZy1yZXF1aXJlZD1cInRydWVcIiBuZy1tb2RlbD1cIm5ld0V4cGVuc2UucmVhc29uXCIgbmctdHJpbT1cImZhbHNlXCIgcGxhY2Vob2xkZXI9XCJ3aHkgb2ggd2h5P1wiPjwvdGV4dGFyZWE+PC9saT48bGk+PGxhYmVsPjwvbGFiZWw+PGJ1dHRvbiBuZy1jbGljaz1cInNhdmVFeHBlbnNlKClcIiBjbGFzcz1cInNvbGlkXCI+U2F2ZSBFeHBlbnNlPC9idXR0b24+IDxidXR0b24gbmctY2xpY2s9XCJjbGVhckV4cGVuc2UoKVwiPmNhbmNlbDwvYnV0dG9uPjwvbGk+PC91bD48L2Zvcm0+PGgzPlN1Ym1pdHRlZCBleHBlbnNlczwvaDM+PGRpdiBjbGFzcz1cImxpc3QtdGFibGUgZXhwZW5zZXMtZGF0YVwiPjxkaXYgY2xhc3M9XCJoZWFkZXItcm93XCI+PGRpdiBjbGFzcz1cImNvbC00XCI+RGF0ZTwvZGl2PjxkaXYgY2xhc3M9XCJjb2wtNCBmaWd1cmVzXCI+QW1vdW50IChpbmMuIFZBVCk8L2Rpdj48ZGl2IGNsYXNzPVwiY29sLTIgZmlndXJlc1wiPlZBVDwvZGl2PjxkaXYgY2xhc3M9XCJjb2wtMTVcIj5SZWFzb248L2Rpdj48L2Rpdj48ZGl2IG5nLXJlcGVhdD1cImV4cGVuc2UgaW4gZXhwZW5zZXNcIiBjbGFzcz1cImJvZHktcm93XCI+PGRpdiBjbGFzcz1cImNvbC00XCI+e3tleHBlbnNlLmRhdGUgfCBkYXRlOlxcJ2RkIE1NTSB5eXl5XFwnfX08L2Rpdj48ZGl2IGNsYXNzPVwiY29sLTQgZmlndXJlc1wiPnt7ZXhwZW5zZS5hbW91bnQgfCBjdXJyZW5jeTpcIiZwb3VuZDtcIn19PC9kaXY+PGRpdiBjbGFzcz1cImNvbC0yIGZpZ3VyZXNcIj57e2V4cGVuc2UudmF0IHwgY3VycmVuY3k6XCImcG91bmQ7XCJ9fTwvZGl2PjxkaXYgY2xhc3M9XCJjb2wtMTVcIj57e2V4cGVuc2UucmVhc29ufX08L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4nKX1dKTsiXX0="}